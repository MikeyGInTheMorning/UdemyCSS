/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; 
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #7777;
    padding: 30px;
}

/* bennetfeely/clippy for other clip-paths */
.header {
    height: 95vh;
    background-image: linear-gradient(
        to bottom right,
        rgba(126, 213, 111, .8), 
        rgba(40, 201, 200, .8)),
        url('../img/hero.jpg');
    background-size: cover;
    background-position: top;
    position: relative;
    
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}
/* 
.logo:hover {
    animation: moveInRight 1s ease-in;
} */

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%);
    text-align: center;
}

.heading-primary {
    color: white;
    text-transform: uppercase;

    /* fixes animation shake */
    backface-visibility: hidden;
    margin-bottom: 50px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 30px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    
    /* other animations properties
    
    animation-iteration-count: 3;
    animation-delay: 1s; 
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 19.7px;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }

    /* 0% {
        opacity: 0;
        transform: translateX(-100px) rotate(-25deg);
    }

    60% {
        transform: rotate(360deg);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    } */
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }

    /* 0% {
        opacity: 0;
        transform: translateX(100px) rotate(25deg);
    }

    60% {
        transform: rotate(360deg);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    } */
}

/*  because inline block is treated like text, this div is centered based on text position of parent div
bring these together to hide the clicked state 
transition all makes everything animate*/
.btn:link,
.btn-visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
}

/*  when hovering, move up 3 px*/
.btn:hover {
    transform: translateY(-3px);
    /*  x y blur color*/
    box-shadow: 0 10px 50px rgba(0,0,0,.2);
}

/*  when hovering, move up 1 px (from original, not hovered state)*/
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

/* color prperty hides clicked text color*/
.btn-white {
    background-color: white;
    color: rgb(71, 71, 71);
}

/* content and display are needed for psuedo elements 
transition all calls the after, and hover::after
*/
.btn::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition:  all .4s;   
}

.btn::after {
    background-color: white;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

@keyframes moveInButton {
    0% {
        opacity: 0;
        transform: translateY(100);
    }

    80% {
        transform: translateY(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn-animated {
    animation: moveInButton;
    animation-duration: 1s;
    animation-fill-mode: backwards;
}